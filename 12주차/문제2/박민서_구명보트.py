def solution(people, limit):
    answer = 0
    people = sorted(people) # 몸무게 정렬
    boat = 0 # 보트 현재 무게 측정
    
    left_idx = 0 # 태울 수 있는 가장 가벼운 사람 찾는 index
    right_idx = len(people) - 1 # 태울 수 있는 가장 무거운 사람 찾는 index
    # 보트를 최대한 적게 사용하면서, 보트에 태울 수 있는 조합: 가장 무거운 사람 + 가장 가벼운 사람
    
    while left_idx <= right_idx:
        boat += people[right_idx] # 현재 제일 무거운 사람 태우고
        right_idx -= 1 
        
        if people[left_idx] <= limit - boat: # 가벼운 사람 태울 수 있으면 태움
            left_idx += 1 
        answer += 1
        
        boat = 0 # 보트 떠나 보내고

    return answer

'''
정확성  테스트
테스트 1 〉	통과 (0.92ms, 9.1MB)
테스트 2 〉	통과 (0.73ms, 9.08MB)
테스트 3 〉	통과 (0.71ms, 9.3MB)
테스트 4 〉	통과 (0.64ms, 9.31MB)
테스트 5 〉	통과 (0.35ms, 9.04MB)
테스트 6 〉	통과 (0.36ms, 9.11MB)
테스트 7 〉	통과 (0.56ms, 9.26MB)
테스트 8 〉	통과 (0.03ms, 9.32MB)
테스트 9 〉	통과 (0.08ms, 9.1MB)
테스트 10 〉	통과 (1.02ms, 9.28MB)
테스트 11 〉	통과 (0.53ms, 9.18MB)
테스트 12 〉	통과 (0.49ms, 9.04MB)
테스트 13 〉	통과 (0.71ms, 9.32MB)
테스트 14 〉	통과 (0.87ms, 9.32MB)
테스트 15 〉	통과 (0.08ms, 9.33MB)
테스트 16 〉	통과 (0.02ms, 9.13MB)
테스트 17 〉	통과 (0.02ms, 9.17MB)
테스트 18 〉	통과 (0.03ms, 9.23MB)
테스트 19 〉	통과 (0.02ms, 9.21MB)
테스트 20 〉	통과 (0.02ms, 9.13MB)
테스트 21 〉	통과 (0.02ms, 9.13MB)
테스트 22 〉	통과 (0.02ms, 9.33MB)
효율성  테스트
테스트 1 〉	통과 (8.51ms, 9.79MB)
테스트 2 〉	통과 (9.77ms, 10.1MB)
테스트 3 〉	통과 (8.57ms, 9.85MB)
테스트 4 〉	통과 (9.97ms, 9.82MB)
테스트 5 〉	통과 (20.61ms, 9.67MB)
채점 결과
정확성: 81.5
효율성: 18.5
합계: 100.0 / 100.0
'''