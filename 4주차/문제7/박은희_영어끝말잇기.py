def solution(n, words):
    used = {words[0]}  # 중복 단어 체크 set
    answer = [0, 0]  

    for i, w in enumerate(words[1:], start=1):  # 첫 단어 제외
        if w in used or words[i - 1][-1] != w[0]:  # 이전단어 마지막 != 지금 단어 처음
            answer = [(i % n) + 1, (i // n) + 1]  # 탈락한 사람, 차례 추가
            break  # 탈락하면 종료

        used.add(w)  # 사용한 단어 used에 추가하면서 중복 체크
        print(used)

    return answer  



'''
탈락자의 정보 출력
몇번 탈락자
탈락 순서

참여자의 정보 인덱스로 활용
워드를 돌며 마지막글자와 첫글자 일치 여부 
중복 안됨

조건 해당 되면
참여자 정보와
참여자의 차례 출력


몇번 탈락자
(단어 인덱스 % 사람수) + 1 
0%3 + 1 
0번째 단어 사람 세명 참여 +1 -> 1번 사람



++
개념
{}	빈 딕셔너리
{word[0]]}	값이 들어간 집합 (set)
set()	빈 집합 (set)




테스트 1 〉	통과 (0.05ms, 10.2MB)
테스트 2 〉	통과 (0.14ms, 10.3MB)
테스트 3 〉	통과 (0.01ms, 10.3MB)
테스트 4 〉	통과 (0.04ms, 10.2MB)
테스트 5 〉	통과 (0.20ms, 10.2MB)
테스트 6 〉	통과 (0.03ms, 10.3MB)
테스트 7 〉	통과 (0.09ms, 10.2MB)
테스트 8 〉	통과 (0.01ms, 10.1MB)
테스트 9 〉	통과 (0.06ms, 10.2MB)
테스트 10 〉	통과 (0.38ms, 10.2MB)
테스트 11 〉	통과 (0.18ms, 10.3MB)
테스트 12 〉	통과 (0.07ms, 10.1MB)
테스트 13 〉	통과 (0.02ms, 10.2MB)
테스트 14 〉	통과 (0.03ms, 10.2MB)
테스트 15 〉	통과 (0.02ms, 10.2MB)
테스트 16 〉	통과 (0.03ms, 10.3MB)
테스트 17 〉	통과 (0.02ms, 10.1MB)
테스트 18 〉	통과 (0.04ms, 10.1MB)
테스트 19 〉	통과 (0.01ms, 10.3MB)
테스트 20 〉	통과 (0.56ms, 10.2MB)


'''